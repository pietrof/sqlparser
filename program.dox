/*!
\file Program.cs
\brief This file contains the implementation of the `SqlProcAnalyzer` class, which analyzes SQL files to extract information about stored procedures, table schemas, and their relationships.

\author Your Name
\date 2023
*/

/// \mainpage SQL Procedure Analyzer
/// \section intro_sec Introduction
/// This program analyzes SQL files in a directory to extract information about stored procedures, including:
/// - Referenced tables
/// - Join fields
/// - Called procedures
/// - Table schemas from `CREATE TABLE` statements

/// \section usage_sec Usage
/// Run the program and specify the directory containing SQL files. The results will be printed to the console.

/// \section dependencies_sec Dependencies
/// - Microsoft.SqlServer.TransactSql.ScriptDom

/// \section license_sec License
/// This program is licensed under the MIT License.

/// \class SqlProcAnalyzer
/// \brief A class that analyzes SQL files to extract stored procedure and table schema information.

/// \class SqlProcAnalyzer::ProcAnalysisResult
/// \brief Represents the analysis result for a stored procedure, including its name, referenced tables, join fields, and called procedures.

/// \class SqlProcAnalyzer::TableSchemaVisitor
/// \brief A visitor that extracts table schemas from `CREATE TABLE` statements.

/// \class SqlProcAnalyzer::StoredProcedureVisitor
/// \brief A visitor that extracts stored procedure information from `CREATE PROCEDURE` statements.

/// \class SqlProcAnalyzer::TableAndJoinVisitor
/// \brief A visitor that extracts table references, join fields, and called procedures from query specifications.

/// \class SqlProcAnalyzer::StoredProcedureInfo
/// \brief Represents information about a stored procedure, including its name and body.

/// \fn Main
/// \brief Entry point of the program. Analyzes SQL files in a specified directory and prints the analysis results for stored procedures and table schemas.

/// \fn SqlProcAnalyzer::AnalyzeDirectory
/// \brief Analyzes all SQL files in the specified directory to extract information about stored procedures, table schemas, and their relationships.
/// \param path The directory path containing SQL files.
/// \return A list of analysis results for each stored procedure.

/// \fn SqlProcAnalyzer::AnalyzeStatements
/// \brief Analyzes the body of a stored procedure to extract tables, join fields, and called procedures.
/// \param fragment The T-SQL fragment representing the procedure body.
/// \param result The analysis result object to populate.

/// \fn SqlProcAnalyzer::TableSchemaVisitor::Visit
/// \brief Visits a `CREATE TABLE` statement to extract the table name and its column definitions.
/// \param node The `CreateTableStatement` node to process.

/// \fn SqlProcAnalyzer::StoredProcedureVisitor::Visit
/// \brief Visits a `CREATE PROCEDURE` statement to extract the procedure name and its body.
/// \param node The `CreateProcedureStatement` node to process.

/// \fn SqlProcAnalyzer::TableAndJoinVisitor::Visit
/// \brief Visits a query specification to extract table references, aliases, and join conditions.
/// \param node The `QuerySpecification` node to process.

/// \fn SqlProcAnalyzer::TableAndJoinVisitor::BuildTableAlias
/// \brief Recursively builds table aliases and resolves table references in the query.
/// \param tableReference The table reference to process.

/// \fn SqlProcAnalyzer::TableAndJoinVisitor::Visit(QualifiedJoin)
/// \brief Visits a qualified join to extract join conditions and recursively process the left and right table references.
/// \param node The `QualifiedJoin` node to process.

/// \fn SqlProcAnalyzer::TableAndJoinVisitor::ProcessSearchCondition
/// \brief Processes a search condition in a join to extract the fields involved in the join.
/// \param condition The boolean expression representing the join condition.

/// \fn SqlProcAnalyzer::TableAndJoinVisitor::ResolveTableName
/// \brief Resolves a table name from a multi-part identifier, considering table aliases.
/// \param identifier The multi-part identifier to resolve.
/// \return The resolved table name.

/// \fn SqlProcAnalyzer::TableAndJoinVisitor::Visit(CommonTableExpression)
/// \brief Visits a common table expression (CTE) to recursively process its query expression.
/// \param node The `CommonTableExpression` node to process.

/// \fn SqlProcAnalyzer::TableAndJoinVisitor::Visit(ExecuteStatement)
/// \brief Visits an `EXECUTE` statement to extract the name of the called procedure.
/// \param node The `ExecuteStatement` node to process.
